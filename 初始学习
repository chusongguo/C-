printf打印函数 输出函数
scanf输入函数，就是自己在键盘上输入数字在控制台

#include <stdio.h>    //包含一个stdio.h的文件，std=standard-标准 standard intput output（标准输入输出）
//使用的printf属于库函数，是软件本身所有的，使用库函数需要先定义-include(包含)

//int 是整形的意思
//main前面的int表示main函数调用返回一个整型值
//void main-这种写法是过时的写法
int main()// 主函数-程序的入口-‘main函数‘有且只有一个
{
	  //开始完成任务
	printf("hello world\n");   //在屏幕上输出‘hello world’；print function-printf-打印函数

	return 0;  //返回 0

}
//char 字符数据类型 a b c d
//short 短整型
//int 整形
//long 长整型
//long long 更长整形
//float 单精度浮点2.2
//double 双精度浮点2.23

%d   打印整型（十进制）
%c   打印字符型
%f   打印浮点型-打印小数    %lf   打印双精度小数
%s   打印字符串
%p  以地址形式打印
%x   打印16进制数字
%o....
\n换行
\t水平制表符

                            char
#include<stdio.h>
int main()
{
	//char ch='A';//申请内存存放A
	//printf("%c\n",ch);//%c打印“字符”格式的数据
	//int age=20;
	//printf("%d\n",age);//%d-打印整形十进制格式数据
	//return 0;
	//int long num = 100;
	//printf("%d\n", num);
	//float f=3.3;
	//printf("%f\n",f);
	//double x=3.1415;
	//printf("%lf\n",x);
    //printf("%d\n",sizeof(int));// 4字节内存
	//printf("%d\n",sizeof(short));// 2
	//printf("%d\n",sizeof(long));// 4
	//printf("%d\n",sizeof(long long));// 8
	//printf("%d\n",sizeof(float));// 4
	//printf("%d\n",sizeof(double));// 8
	//printf("%d\n",sizeof(char));//  1
	//short age=20;//向内存申请2字节=16bit位，存放20
	//printf("%d\n",age);
	 //float weight=72.5;
	//printf("%f\n",weight);
	char A;
	printf("A\n");
	return 0;


}
加法
#include <stdio.h>
int main()
{
	int a;
	int b;
	int c;
	scanf("%d%d",&a,&b);// &- 取地址符号，scanf- 输入函数
	c=a+b;
	printf("c=%d\n",c);

	return 0;

}
#define _CRT_SECURE_NO_WARNINGS 1//排除不安全性报错  unsafe 一定加在源文件的第一行
                 int n=10;
	int arr[10]={0};//arr数组，后边中括号里数字(只能是常量)说明此数组有几个元素，大括号里的0表示是整型
	
	//const int num=10;//const常属性，放在一个变量前边后，这个变量将不能改变，但其本质仍是一个常变量，不能作为常量输出
                 #define MIN 99//#define 定义的标识符常量，给字符或变量一个常定义，使其成为一个常量
                 int main()
                  {
	int arr[MIN]={0};
	printf("%d\n",MIN);
                 return 0；
                  }
enum  Color//enum 枚举常量，将几个并列的元素列举并赋值0，1，2...出来
{
	blue,
	green,
	red
};
int main()
{
	int Color   ;
	printf("%d\n",blue);
	printf("%d\n",red);
	printf("%d\n",green);

char arr1[]="csgggg";//将字符存入数组arr1中  "csgggg"包含--'c','s','g','g','g','g','\0'。\0表示字符串的结束标志
	char arr2[]={'c','s','g','g','g','g',0};//{'c','s','g','g','g','g',0}所以单字符数组最后必须加0以表示字符结束
	printf("%s\n",arr1);
	printf("%s\n",arr2);
char arr1[]="csg";//将字符串csg存于arr1
	char arr2[]={'c','s','g',0};
	printf("%d\n",strlen(arr1));//strlen--string length--计算字符串长度
	printf("%d\n",strlen(arr2)); 

printf("%d\n",strlen("c\\win\\x86\\user\\text"));// \ 代表转义字符
	printf("%c\n",'\x61');//  \132  是八进制数 132 转换为十进制数后的ASCII码值，八进制数132转换成十进制为90，90对应的ASCII码为 z
	        //           \x**表示16进制数 \x61             6   1                                                  1       3      2
            //                                                 6*16^1+1*16^0=96+1=97                  1*8^2 +3*8^1+2*8^0=64+24+2=90 

简单选择程序
#include<stdio.h>
int main()
{
	int xuanze;//xuanze是自定义变量
	
	printf("你要好好学习吗？（选择1或0）\n");
		scanf("%d",&xuanze);//键入数字1/0（%d后不要加\n）
	if (xuanze==1)//如果xuanze=1
	printf("走上人生巅峰\n");//打印  走上人生巅峰
	else //其他
		printf("进厂打工\n");
	return 0;

}
简单循环程序
#include<stdio.h>
int main()
{
int a=0;
	printf("好好学习\n");
	while (a<20000)//while是循环函数
	{
		printf("学习一天:%d\n",a);
		a++;
	}
	if(a>=20000)
	printf("成功\n");
	
	return 0;
练习
int day=0;
	while(day<20000)
	{
		printf("学习天数：%d\n",day);
		day++;
	
	}
	if(day>=20000)
		printf("成功\n");
	else
	    printf("半途而废\n");//缺少定义（基本显示不出来）

	return 0;



添加一个函数，（自定义函数）
加法add
int add(int x,int y)//添加add函数，里边包含x，y两个元素
{
	int z=x+y;//可以用+-*/替换得到不同的函数
	return z;
}//将x，y相加得到z并输出z
int main()
{
int a=10,b=100,c=90,d=20,h,j;
h=add(a,b);
j=add(c,d);
printf("h=%d\nj=%d\n",h,j);
return 0;


}
练习
减法（cha差）
//int  cha(int x,int y)
//{
//	int z=x-y;
//	return z;
//}
//int main()
//	{
//	int a=10;
//	int b=20;
//	int c;
//	int d=100;
//	int e=99;
//	int h;
//	c=cha(a,b);
//	h=cha(d,e);
//	
//	//c=a-b;
//	printf("c=%d\nh=%d\n",c,h );
//
//	return 0;

用数组储存多个元素
	int s[6]={1,2,3,4,5,6};//储存一个包含abcde5个字符的数组
	 printf("%d\n",s[4]);//s[下标]以下标的方式访问元素，下标4，数组中元素为5
	 return 0;
}
练习
int main()
{
	int s[7]={1,2,3,4,5,6,7};//储存一个包含abcde5个字符的数组
	int i=0;
	while(i<7){
		printf("%d ",s[i]);
	i++;
	}
	 //printf("%d\n",s[4]);//s[下标]以下标的方式访问元素，下标4，数组中元素为5
	 return 0;
}
+-*/%运算符
int main()
{
	int a =5%2;//%取模（余数）
	printf("%d\n",a);
	return 0;
2进制操作符                                                                                                1                  1                1                1
<< >> & | ^                                                                                           1*2^3         1*2^2        1*2^1       1*2^0
	int b=5;  //101（2进制）                                                            8                  4                2                1
	int c=a|b;//111（或操作）
	printf("%d",c);
	return 0;3
<< ,>>移位操作符
int a =1;//整型（int）1占4个字节-16bit位--
	//       -0000000000000000000000000000001
		int b=a<<1;//<<将2进制数移位（移位操作符）
		//   -0000000000000000000000000000010
	printf("%d\n",b);//打印结果变成2
	return 0;
%与操作   0&1=0，0与0=1，1与1=1                            
	int a=3;    //011(2进制)    
	int b=5;    //101（2进制）
	int c=a&b;//001（与操作）
	printf("%d",c);//c=1
	return 0;
| 或操作   0|1=1，0|0=0，1|1=1
	int a=3;   //011(2进制)
	int b=5;  //101（2进制）
	int c=a|b;//111（或操作）
	printf("%d",c);//c=7
	return 0;
^异或操作 0^1=1,0^0=0,1^1=0 (对应的2进制位相同为0；相异为1)
int a=3;  //011(2进制)
	int b=5;  //101（2进制）
	int c=a^b;//110（异或操作）
	printf("%d",c);//c=6
	return 0;
单目操作符
！逻辑反操作  (0为假，非0为真)  a=10为真，！a为假则=0
int a=10;//真
printf("%d",！a);//a为真，!a为假
sizeof(单目操作符)操作数的类型长度，以字节为标准
	int arr[10]={0};//10个整型元素数组
	int sz;
	sz=sizeof(arr)/sizeof(arr[0]);
	//（数组arr总大小）/（数组arr中元素大小）=元素个数（40/4=10）
	printf("%d\n%d\n",sizeof(arr),sz);//arr大小=40，sz大小=10
	return 0;
